name: Dynamic Jobs

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Permette l'esecuzione manuale del workflow
    inputs:
      approve_deploy:
        description: 'Approve deployment? (yes or no)'
        required: true
        default: 'no'  # Imposta un valore predefinito

jobs:
  generate-jobs:
    runs-on: ubuntu-latest
    outputs:
      apps: ${{ steps.generate.outputs.apps }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Read config file
        id: generate
        run: |
          apps=$(jq -c '.applicationsTool' config.json)
          echo "::set-output name=apps::$apps"

  approval-jobs:
    runs-on: ubuntu-latest
    needs: generate-jobs  # Aspetta che il job di generazione sia completato
    steps:
      - name: Wait for approval
        id: approval
        run: |
          echo "Approval requested for the following applications:"
          echo "${{ needs.generate-jobs.outputs.apps }}"
          echo "User input: ${{ github.event.inputs.approve_deploy }}"

      - name: Check approval input
        run: |
          if [ "${{ github.event.inputs.approve_deploy }}" != "yes" ]; then
            echo "Deployment not approved. Exiting."
            exit 1  # Uscita se non Ã¨ approvato
          fi
          echo "Deployment approved. Proceeding to deploy."

  dynamic-jobs:
    runs-on: ubuntu-latest
    needs: [generate-jobs, approval-jobs]  # Aspetta sia generate-jobs che approval-jobs
    strategy:
      matrix:
        app_name: ${{ fromJson(needs.generate-jobs.outputs.apps) }}
    steps:
      - name: Trigger deploy pipeline for ${{ matrix.app_name }}
        run: |
          echo "Triggering deploy for ${{ matrix.app_name }}"
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.SECRET_TOKEN }}" \
            https://api.github.com/repos/giannicaruana/demoPipelineCalled/actions/workflows/deploy.yml/dispatches \
            -d "{\"ref\":\"main\", \"inputs\": {\"app_name\": \"${{ matrix.app_name }}\"}}"
