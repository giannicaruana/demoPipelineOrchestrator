name: Trigger Pipeline

on:
  push:
    branches:
      - main

applicationsTool:
  generate-options:
    runs-on: ubuntu-latest
    outputs:
      options: ${{ steps.generate.outputs.options }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read config file
        id: read_config
        run: |
          echo "::set-output name=applicationsTool::$(jq -c '.applicationsTool' config.json)"


  # Dynamically create jobs based on the config file
  job_matrix:
    needs: generate-jobs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app_name: ${{ fromJson(needs.generate-jobs.outputs.applicationsTool) }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Trigger deploy pipeline for  ${{ matrix.app_name }} appliation
        run: |
          app_name="${{ matrix.app_name  }}"
          if [[ ! " ${options[@]} " =~ " ${app_name} " ]]; then
            echo "Invalid application name: $app_name"
            exit 1
          fi
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/YOUR_USERNAME/repo-B/actions/workflows/deploy.yml/dispatches \
            -d "{\"ref\":\"main\", \"inputs\": {\"app_name\": \"$app_name\"}}"